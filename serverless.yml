service: BotPlay

custom:
  tableName: 'BotPlay-AccessTokens-${self:provider.stage}'

provider:
  name: aws
  runtime: nodejs10.x
  # Override stage at runtime with --stage {stagename}
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource:
        - { "Fn::GetAtt": ["BotPlayDynamoDBTable", "Arn"] }
  environment:
    ACCESS_TOKEN_TABLE: ${self:custom.tableName}
    SLACK_APP_CLIENT_ID: ${file(config.yml):${opt:stage, self:provider.stage}.slack.clientId}
    SLACK_APP_CLIENT_SECRET: ${file(config.yml):${opt:stage, self:provider.stage}.slack.clientSecret}
    SLACK_APP_SIGNING_SECRET: ${file(config.yml):${opt:stage, self:provider.stage}.slack.signingSecret}
    COVID_API_HOST: ${file(config.yml):${opt:stage, self:provider.stage}.covid.host}
    COVID_API_KEY: ${file(config.yml):${opt:stage, self:provider.stage}.covid.key}
    LOG_LEVEL: ${file(config.yml):${opt:stage, self:provider.stage}.logging.level}

functions:
  bot-play:
    handler: src/index.handler
    events:
      - http:
          path: event
          method: post
          integration: lambda
          response:
            template: $input.path('$')
      - http:
          path: install
          method: get
          integration: lambda
          response:
            template: $input.path('$')
            statusCodes:
              200:
                headers:
                  Content-Type: "'text/html'"
              201:
                pattern: ''
              301:
                pattern: http.*
                headers:
                  Location: integration.response.body.errorMessage
                  Cache-Control: "'no-cache, no-store, must-revalidate'"
      - http:
          path: authorized
          method: get
          integration: lambda
          response:
            template: $input.path('$')
            statusCodes:
              200:
                headers:
                  Content-Type: "'text/html'"
              201:
                pattern: ''
              301:
                pattern: http.*
                headers:
                  Location: integration.response.body.errorMessage
                  Cache-Control: "'no-cache, no-store, must-revalidate'"

resources:
  Resources:
    BotPlayDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: teamId
            AttributeType: S
        KeySchema:
          - AttributeName: teamId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1